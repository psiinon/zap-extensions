authhelper.auth-detect.desc = 指定されたリクエストが認証リクエストとして識別されました。「追加情報」フィールドには、関連するフィールドを特定する key\=value 形式の行セットが含まれています。このリクエストが認証方法を「自動検出」に設定したコンテキスト内にある場合、このルールによって識別されたリクエストに一致するよう認証設定が変更されます。
authhelper.auth-detect.name = 認証リクエストが特定されました
authhelper.auth-detect.soln = これは脆弱性ではなく情報提供のアラートであるため、修正すべき点はありません。

authhelper.auth.method.autodetect.name = 認証の自動検出
authhelper.auth.method.browser.label.browser = ブラウザー：
authhelper.auth.method.browser.label.diagnostics = 診断記録：
authhelper.auth.method.browser.label.loginUrl = ログイン URL：
authhelper.auth.method.browser.label.loginWait = ログイン待機時間 (秒)\:
authhelper.auth.method.browser.label.minWaitFor = 最小待機時間 (秒)\:
authhelper.auth.method.browser.label.stepDelay = ステップ待機時間 (秒)\:
authhelper.auth.method.browser.name = ブラウザベース認証
authhelper.auth.method.browser.output.sessionid = セッショントークンが履歴ID {0} で特定されました
authhelper.auth.method.browser.steps.ui.add.button = 追加
authhelper.auth.method.browser.steps.ui.add.title = 認証ステップの追加
authhelper.auth.method.browser.steps.ui.duplicated.text = 指定された説明を持つステップは、すでに存在しています。
authhelper.auth.method.browser.steps.ui.duplicated.title = ステップの重複
authhelper.auth.method.browser.steps.ui.field.cssselector = CSS セレクター\:
authhelper.auth.method.browser.steps.ui.field.description = 説明\:
authhelper.auth.method.browser.steps.ui.field.enabled = 有効\:
authhelper.auth.method.browser.steps.ui.field.timeout = タイムアウト\:
authhelper.auth.method.browser.steps.ui.field.totpalgorithm = TOTP アルゴリズム\:
authhelper.auth.method.browser.steps.ui.field.totpdigits = TOTP 桁数
authhelper.auth.method.browser.steps.ui.field.totpperiod = TOTP 期間\:
authhelper.auth.method.browser.steps.ui.field.totpsecret = TOTP シークレット\:
authhelper.auth.method.browser.steps.ui.field.type = タイプ\:
authhelper.auth.method.browser.steps.ui.field.value = 値：
authhelper.auth.method.browser.steps.ui.field.xpath = XPath\:
authhelper.auth.method.browser.steps.ui.modify.button = 変更
authhelper.auth.method.browser.steps.ui.modify.title = 認証ステップの変更
authhelper.auth.method.browser.steps.ui.panel.label = 認証ステップ\:
authhelper.auth.method.browser.steps.ui.remove.button.cancel = キャンセル
authhelper.auth.method.browser.steps.ui.remove.button.confirm = 削除
authhelper.auth.method.browser.steps.ui.remove.checkbox.label = 今後このメッセージを表示しない
authhelper.auth.method.browser.steps.ui.remove.text = 選択した認証ステップを削除してもよろしいですか?
authhelper.auth.method.browser.steps.ui.remove.title = 認証ステップの削除
authhelper.auth.method.browser.steps.ui.table.header.description = 説明
authhelper.auth.method.browser.steps.ui.table.header.enabled = 有効
authhelper.auth.method.browser.steps.ui.type.auto_steps = 自動ステップ
authhelper.auth.method.browser.steps.ui.type.click = 要素クリック
authhelper.auth.method.browser.steps.ui.type.custom_field = カスタムフィールドの入力
authhelper.auth.method.browser.steps.ui.type.escape = Escapeキーの送信
authhelper.auth.method.browser.steps.ui.type.password = パスワードフィールドの入力
authhelper.auth.method.browser.steps.ui.type.return = リターンキーの送信
authhelper.auth.method.browser.steps.ui.type.totp_field = TOTPフィールドの入力
authhelper.auth.method.browser.steps.ui.type.username = ユーザー名フィールドの入力
authhelper.auth.method.browser.steps.ui.type.wait = タイムアウトまで待機
authhelper.auth.method.browser.steps.ui.warn.invalid.description = 説明は空であってはなりません。
authhelper.auth.method.browser.steps.ui.warn.invalid.invalidtimeout = タイムアウトはゼロより大きい値でなければなりません。
authhelper.auth.method.browser.steps.ui.warn.invalid.invalidtotpalgorithm = TOTPアルゴリズムが無効であるか、サポートされていません。
authhelper.auth.method.browser.steps.ui.warn.invalid.invalidtotpdigits = TOTPの桁数はゼロより大きい値でなければなりません。
authhelper.auth.method.browser.steps.ui.warn.invalid.invalidtotpperiod = TOTPの期間はゼロより大きい値でなければなりません。
authhelper.auth.method.browser.steps.ui.warn.invalid.nocssorxpath = 選択されたタイプでは、要素を識別するためにCSSセレクターまたはXPathが必要です。
authhelper.auth.method.browser.steps.ui.warn.invalid.nototpsecret = TOTPシークレットは空であってはなりません。
authhelper.auth.method.browser.steps.ui.warn.invalid.notype = ステップにはタイプが必要です。
authhelper.auth.method.browser.steps.ui.warn.invalid.novalue = 選択されたタイプには値が必要です。
authhelper.auth.method.browser.steps.ui.warn.invalid.title = 無効な認証ステップ

authhelper.auth.method.clientscript.name = クライアントスクリプト認証

authhelper.auth.method.diags.steps.authenticated = 認証メッセージ
authhelper.auth.method.diags.steps.authmessage = プライマリメッセージによる認証
authhelper.auth.method.diags.steps.emptysession = 空メッセージによる認証
authhelper.auth.method.diags.steps.error = エラー
authhelper.auth.method.diags.steps.finish = 完了したステップ
authhelper.auth.method.diags.steps.loginlink = ログインリンク
authhelper.auth.method.diags.steps.ms.clickbutton = [MS] ボタンをクリック
authhelper.auth.method.diags.steps.ms.clickkmsi = [MS] KMSIをクリック
authhelper.auth.method.diags.steps.ms.clickproofdone = [MS] 操作完了をクリック
authhelper.auth.method.diags.steps.ms.clickproofredirect = [MS] リダイレクト完了をクリック
authhelper.auth.method.diags.steps.ms.missingbutton = [MS] ボタンが見つかりません
authhelper.auth.method.diags.steps.ms.missingpassword = [MS] パスワードフィールドが見つかりません
authhelper.auth.method.diags.steps.ms.missingusername = [MS] ユーザー名フィールドが見つかりません
authhelper.auth.method.diags.steps.ms.stepchoice = [MS] ステップの選択
authhelper.auth.method.diags.steps.ms.stepproofunknown = [MS] 不明なステップの証明
authhelper.auth.method.diags.steps.ms.stepunknown = [MS] 不明なステップ
authhelper.auth.method.diags.steps.password = パスワード自動入力
authhelper.auth.method.diags.steps.refresh = 自動更新
authhelper.auth.method.diags.steps.return = 自動リターン
authhelper.auth.method.diags.steps.sessionupdate = 認証セッションの更新
authhelper.auth.method.diags.steps.start = アクセスされたURL
authhelper.auth.method.diags.steps.unauthenticated = 非認証メッセージ
authhelper.auth.method.diags.steps.username = ユーザー名自動入力
authhelper.auth.method.diags.zest.close = ブラウザを閉じました
authhelper.auth.method.diags.zest.interaction = インタラクション\: {0}
authhelper.auth.method.diags.zest.open = ブラウザを開きました

authhelper.auth.test.dialog.button.copy = コピー
authhelper.auth.test.dialog.button.record = 記録。。。
authhelper.auth.test.dialog.button.reset = リセット

authhelper.auth.test.dialog.button.save = テスト

authhelper.auth.test.dialog.default-context = 認証テスト
authhelper.auth.test.dialog.error.badurl = ログインURLは "http\://" または "https\://" で始めてください
authhelper.auth.test.dialog.error.nocontext = コンテキストを指定してください
authhelper.auth.test.dialog.error.nopassword = パスワードを指定してください

authhelper.auth.test.dialog.error.nourl = ログインURLを指定してください
authhelper.auth.test.dialog.error.nouser = ユーザ名を指定してください
authhelper.auth.test.dialog.label.browser = ブラウザー：
authhelper.auth.test.dialog.label.context = コンテキスト\:
authhelper.auth.test.dialog.label.copy = 
authhelper.auth.test.dialog.label.diag = 診断：
authhelper.auth.test.dialog.label.loginurl = ログインURL\:
authhelper.auth.test.dialog.label.method = 認証方法
authhelper.auth.test.dialog.label.method.browser = ブラウザベース
authhelper.auth.test.dialog.label.method.script = クライアントスクリプト
authhelper.auth.test.dialog.label.password = パスワード\:
authhelper.auth.test.dialog.label.recdiag = 診断記録：
authhelper.auth.test.dialog.label.script = クライアントスクリプト
authhelper.auth.test.dialog.label.stepdelay = ステップ待機時間 (秒)\:
authhelper.auth.test.dialog.label.username = ユーザ名：
authhelper.auth.test.dialog.label.wait = 待ち時間(秒)：
authhelper.auth.test.dialog.results.found = 識別
authhelper.auth.test.dialog.results.password = パスワード欄
authhelper.auth.test.dialog.results.session = セッション処理
authhelper.auth.test.dialog.results.status = 状態
authhelper.auth.test.dialog.results.username = ユーザ名欄
authhelper.auth.test.dialog.results.verif = 検証URL
authhelper.auth.test.dialog.status.failed = 失敗
authhelper.auth.test.dialog.status.launching = ブラウザを起動
authhelper.auth.test.dialog.status.notstarted = 開始していません
authhelper.auth.test.dialog.status.passed = 問題なし
authhelper.auth.test.dialog.tab.diag = 診断
authhelper.auth.test.dialog.tab.steps = ステップ
authhelper.auth.test.dialog.tab.test = テスト

authhelper.auth.test.dialog.title = 認証テスター
authhelper.authdiags.manager.import.error = 認証診断のインポートに失敗しました。
authhelper.authdiags.manager.import.error.clipboard = クリップボードの処理に失敗しました。
authhelper.authdiags.manager.import.error.parse = 認証レポートの解析に失敗しました。
authhelper.authdiags.manager.import.error.title = 認証レポートのインポートに失敗しました

authhelper.authdiags.message.tag.initiator = 開始者\: {0}
authhelper.authdiags.panel.all.title = 診断
authhelper.authdiags.panel.button.createscript = 認証スクリプトを作成
authhelper.authdiags.panel.button.exportallscreenshots = 全てエクスポート
authhelper.authdiags.panel.button.exportscreenshot = 現在の内容をエクスポート
authhelper.authdiags.panel.button.loadplan = プランをロード
authhelper.authdiags.panel.button.resetcontent = コンテンツをリセット
authhelper.authdiags.panel.diagnostic.title = ID {0}
authhelper.authdiags.panel.exportscreenshot.filter = PNG画像 (*.png)
authhelper.authdiags.panel.filename.screenshot = 診断ID {0} ステップ {1}
authhelper.authdiags.panel.import.clipboard = クリップボードをインポート
authhelper.authdiags.panel.import.error = JSON認証レポートの診断情報の読み込みに失敗しました。
authhelper.authdiags.panel.import.file = ファイルをインポート
authhelper.authdiags.panel.import.filter = JSON認証レポート (*.json)
authhelper.authdiags.panel.label.scriptName = 診断ID {0}
authhelper.authdiags.panel.refresh = 更新
authhelper.authdiags.panel.remove = 削除
authhelper.authdiags.panel.remove.warn = 選択した認証診断を削除してもよろしいですか?
authhelper.authdiags.panel.step.label = {0}\: {1}
authhelper.authdiags.panel.tab.afplan = AF プラン
authhelper.authdiags.panel.tab.screenshots = スクリーンショット
authhelper.authdiags.panel.tab.script = スクリプト
authhelper.authdiags.panel.tab.steps = ステップ
authhelper.authdiags.panel.tab.steps.all = すべて
authhelper.authdiags.panel.table.header.context = コンテキスト
authhelper.authdiags.panel.table.header.id = ID
authhelper.authdiags.panel.table.header.method = メソッド
authhelper.authdiags.panel.table.header.script = スクリプト
authhelper.authdiags.panel.table.header.steps = \# ステップ
authhelper.authdiags.panel.table.header.timestamp = タイムスタンプ
authhelper.authdiags.panel.table.header.url = URL
authhelper.authdiags.panel.table.header.user = ユーザー
authhelper.authdiags.panel.table.steps.browserstorage.header.key = キー
authhelper.authdiags.panel.table.steps.browserstorage.header.type = タイプ
authhelper.authdiags.panel.table.steps.browserstorage.header.value = 値
authhelper.authdiags.panel.table.steps.header.description = 説明
authhelper.authdiags.panel.table.steps.header.localstorage = \# ブラウザストレージ
authhelper.authdiags.panel.table.steps.header.messages = \# HTTP メッセージ
authhelper.authdiags.panel.table.steps.header.number = \#
authhelper.authdiags.panel.table.steps.header.screenshot = スクリーンショット
authhelper.authdiags.panel.table.steps.header.url = URL
authhelper.authdiags.panel.table.steps.header.webelement = Web 要素
authhelper.authdiags.panel.table.steps.header.webelements = \# Web 要素
authhelper.authdiags.panel.table.steps.tab.browserstorage = ブラウザストレージ ({0})
authhelper.authdiags.panel.table.steps.tab.httpmessages = HTTP メッセージ ({0})
authhelper.authdiags.panel.table.steps.tab.webelement = Web 要素
authhelper.authdiags.panel.table.steps.tab.webelements = Web 要素 ({0})
authhelper.authdiags.panel.table.steps.webelement.selector.css = CSS\: {0}
authhelper.authdiags.panel.table.steps.webelement.selector.xpath = XPath\: {0}
authhelper.authdiags.panel.table.steps.webelements.header.attributeId = ID
authhelper.authdiags.panel.table.steps.webelements.header.attributeName = 名前
authhelper.authdiags.panel.table.steps.webelements.header.attributeType = タイプ
authhelper.authdiags.panel.table.steps.webelements.header.attributeValue = 値
authhelper.authdiags.panel.table.steps.webelements.header.displayed = 表示
authhelper.authdiags.panel.table.steps.webelements.header.enabled = 有効
authhelper.authdiags.panel.table.steps.webelements.header.formIndex = フォームインデックス
authhelper.authdiags.panel.table.steps.webelements.header.selector = セレクター
authhelper.authdiags.panel.table.steps.webelements.header.tagName = タグ名
authhelper.authdiags.panel.table.steps.webelements.header.text = テキスト
authhelper.authdiags.panel.title = 認証診断
authhelper.authdiags.panel.view = ビュー

authhelper.authreport.desc = 認証ヘルパーレポート
authhelper.authreport.name = 認証ヘルパーレポート
authhelper.authreport.summary.auth.fail = 認証に失敗しました
authhelper.authreport.summary.auth.pass = 認証に成功したようです
authhelper.authreport.summary.fail.detail.afplan.errors = 自動化フレームワークのプランにエラーがありました
authhelper.authreport.summary.fail.detail.loggedin.failed = ログイン状態を示す情報が見つかりませんでした。
authhelper.authreport.summary.fail.detail.login.failures = 1回以上のログイン失敗
authhelper.authreport.summary.fail.detail.no.successful.logins = ログインに成功しませんでした
authhelper.authreport.summary.fail.detail.overall.failed = すべての認証要素をパスしましたが、最終的に認証は失敗と判定されました。
authhelper.authreport.summary.fail.detail.pass.count.failed = ブラウザログインに成功しませんでした
authhelper.authreport.summary.fail.detail.sessmgmt.failed = セッション管理の特定に失敗しました
authhelper.authreport.summary.fail.detail.verif.failed = 検証URLの特定に失敗しました
authhelper.authreport.summary.password.fail = パスワードフィールドが特定されませんでした
authhelper.authreport.summary.password.pass = パスワードフィールドが特定されました
authhelper.authreport.summary.session.fail = セッションハンドリングが特定されませんでした
authhelper.authreport.summary.session.pass = セッションハンドリングが特定されました
authhelper.authreport.summary.stats.fail = 利用可能な統計はありません
authhelper.authreport.summary.username.fail = ユーザー名フィールドが特定されませんでした
authhelper.authreport.summary.username.pass = ユーザー名フィールドが特定されました
authhelper.authreport.summary.verif.fail = 検証URLが特定されませんでした
authhelper.authreport.summary.verif.pass = 検証URLが特定されました

authhelper.client.desc = 認証済みクライアントスパイダースキャンでブラウザベースの認証を有効にします
authhelper.client.name = クライアントスパイダーのブラウザベース認証サポート

authhelper.desc = 認証ヘルパー

authhelper.name = 認証ヘルパー

authhelper.session-detect.desc = 指定されたレスポンスにセッション管理トークンが含まれていることが識別されました。「追加情報」フィールドには、ヘッダーベースセッション管理方式で使用可能なヘッダートークンのセットが含まれています。このリクエストがセッション管理方式を「自動検出」に設定したコンテキスト内にある場合、このルールによって識別されたトークンを利用したセッション管理方式に変更されます。
authhelper.session-detect.name = セッション管理レスポンスの特定
authhelper.session-detect.soln = これは脆弱性ではなく情報提供のアラートであるため、修正すべき点はありません。

authhelper.session.method.auto.name = セッション管理の自動検出
authhelper.session.method.header.error.json.parse = {0} からの認証応答ボディをJSONとして解析できませんでした\: {1} 
authhelper.session.method.header.error.value = ヘッダーと値の両方を指定してください
authhelper.session.method.header.label.footer = 複数のヘッダーがサポートされます - 最後のフィールドに文字を入力すると、新しい行が自動的に作成されます。\n値には以下のトークンを使用できます：\n* {%json\:path.to.data%}\tJSON認証レスポンスデータ\n* {%env\:env_var%}       環境変数\n* {%script\:glob_var%}   グローバルスクリプト変数\n* {%header\:env_var%}    認証レスポンスヘッダー\n* {%url\:key%}           認証URLパラメーター
authhelper.session.method.header.label.header = ヘッダー
authhelper.session.method.header.label.value = 値
authhelper.session.method.header.name = ヘッダーベースセッション管理

authhelper.spiderajax.desc = 認証済みAjax スパイダースキャンでブラウザベースの認証を有効にします
authhelper.spiderajax.name = Ajax スパイダーのブラウザベース認証サポート

authhelper.topmenu.tools.authtester = 認証テスター…

authhelper.verification-detect.desc = このリクエストは、認証検証の良好な候補として特定されました。もしリクエストが、検証戦略が「ポーリング」に設定されているがURLが空欄のコンテキストにある場合、このルールが正しい値を自動的に設定します。
authhelper.verification-detect.name = 検証リクエストが特定されました
authhelper.verification-detect.soln = これは脆弱性ではなく情報提供のアラートであるため、修正すべき点はありません。
